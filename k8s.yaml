apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: the-emissarys-odyssey-pv-claim
  labels:
    app: the-emissarys-odyssey 
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: nfs
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: the-emissarys-odyssey
spec:
  selector:
    matchLabels: 
      app: the-emissarys-odyssey
  replicas: 1
  template:
    metadata:
      labels:
        app: the-emissarys-odyssey
    spec:
      imagePullSecrets:
        - name: simplicitas-dev-docker-creds
      containers:
      - name: the-emissarys-odyssey
        env:
        - name: WORDPRESS_DB_HOST
          valueFrom:
            secretKeyRef:
              name: the-emissarys-odyssey
              key: WORDPRESS_DB_HOST
        - name: WORDPRESS_DB_USER
          valueFrom:
            secretKeyRef:
              name: the-emissarys-odyssey
              key: WORDPRESS_DB_USER
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: the-emissarys-odyssey
              key: WORDPRESS_DB_PASSWORD
        - name: WORDPRESS_DB_NAME
          valueFrom:
            secretKeyRef:
              name: the-emissarys-odyssey
              key: WORDPRESS_DB_NAME
        image: simplicitasdev/the-emissarys-odyssey:build-$BUILD_NUMBER-$GIT_COMMIT
        ports: 
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/html/wp-content
          name: wp-content
      volumes:
        - name: wp-content
          persistentVolumeClaim:
            claimName: the-emissarys-odyssey-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: the-emissarys-odyssey-service
spec:
  selector:
    app: the-emissarys-odyssey
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: the-emissarys-odyssey-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/proxy-body-size: 10000m
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
spec:
  rules:
  - host: "the-emissarys-odyssey.knox.pro"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: the-emissarys-odyssey-service
            port: 
              number: 80
  tls:
  - hosts:
    - "the-emissarys-odyssey.knox.pro"
    secretName: the-emissarys-odyssey-tls
